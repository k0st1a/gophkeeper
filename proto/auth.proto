syntax = "proto3";

// option go_package = "github.com/k0st1a/gophkeeper/internal/adapters/api/grpc/protobuf/auth";

// Указывает пространство имен для сервиса и сообщений. Помогает избегать конфликтов имен.
package auth;

import "google/api/annotations.proto";

// Auth is service for managing permissions and roles.
service AuthService {
  // Register registers a new user.
  rpc Register (RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
        post: "/api/v1/users/register"
        body: "*"
    };
  };
  // Login logs in a user and returns an auth token.
  rpc Login (LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
        post: "/api/v1/users/login"
        body: "*"
    };
  };
}

message RegisterRequest {
  string email = 1; // Email of the user to register.
  string password = 2; // Password of the user to register.
}

message RegisterResponse {
  int64 user_id = 1; // User ID of the registered user.
}

message LoginRequest {
  string email = 1; // Email of the user to login.
  string password = 2; // Password of the user to login.
}

message LoginResponse {
  string token = 1; // Auth token of the logged in user.
}
